#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass ociamthesis-lyx
\options a4paper,titlepage
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine natbib
\cite_engine_type numerical
\biblio_style plainnat
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
Estado del Arte 
\begin_inset CommandInset label
LatexCommand label
name "chap:Estado-del-Arte"

\end_inset


\end_layout

\begin_layout Standard
En el Capítulo 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Introducción"

\end_inset

, se ha destacado los aspectos más importantes del proyecto.
 En este capítulo desarrollaremos los videojuegos, sus carasterísticas y
 arquitectura con respecto al juego en red, con especial detalle al tipo
 de juego que se desarrollará.
 También se ve una comparación de diferentes entornos de desarrollo de juegos
 mostrando las diferentes posibilidades que ofrece cada uno de ellos y cual
 parece más adecuado bajo unos requisitos.
 A continuación nos centraremos que problemas con respecto a la red hay
 que superar para que sea posible jugar en red satisfactoriamente.
 Por último se tratan las técnicas para mejorar la experiencia de juego
 de los usuarios centrándose en las técnicas de predicción de movimiento
 o 
\begin_inset Quotes eld
\end_inset

dead reckoning
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Section
Introducción a los videojuegos
\end_layout

\begin_layout Standard
Los videojuegos se pueden definir como cualquier aplicación o software cuyo
 fin es el entretenimiento de una o más personas por lo general.
 Más específicamenten los juegos multijugador son juegos en los que se permiten
 participar simultáneamente a dos o más jugadores.
 En estos juegos, los participantes compiten en demostrar su habilidad,
 bien como grupo para alcanzar un objetivo o por el contrario enfrentandose
 entre sí individualmente o formando grupos.
 Por todo ello, la palabra multijugador da a entener hoy en día que los
 usuarios juegan juntos mediante sus dispositivos conectados a una red,
 bien local o global (Internet).
 Aunque hay que diferenciar entre videojuegos que permitan un multijugador
 local, es decir todos los partipantes usan la misma máquina física y los
 juegos multijugador en red, da igual que tipo, en los cuales cada usuario
 usa una máquina diferente.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
A día de hoy los videojuegos son ejecutados sobre muy diversas plataformas
 como ordenadores personales, consolas, máquinas arcade, dispositivos móviles,
 etc.
 La plataforma predefine bastante las posibilidades de los juegos que se
 van a ejecutar sobre ella ya que están sujetos a usar los controladores
 y periféricos de esta.
 Un proyecto de desarrollo de un videojuego en un campo multidisciplinar
 donde se mezclan perfiles de muy diversos tipos, además depende del género
 y tipo de juego así como la plataforma a la que está orientada.
 Los géneros pueden ser muchísimos como aventura, arcade, educativos, estrategia
, acción, plataformas, simuladores, deportivos ..., pero últimamente como se
 comenta en la 
\begin_inset CommandInset ref
LatexCommand ref
reference "chap:Introducción"

\end_inset

 los juegos multijugador en red son los que mayor crecimiento están teniendo
 ya que en sí no son un género sino un añadido a cualquiera de los anteriores,
 haciendo más atractivo y adictivo el juego ya que se pueden jugar junto
 a amigos o desconocidos a gran distancia haciendo uso de la red.
\end_layout

\begin_layout Section
Juegos Multijugador en Línea 
\end_layout

\begin_layout Standard
Los juegos multijugador online o MOGs son en sí una especie de simulación
 distribuida (DIS) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "DIS"
description "Distributed Interactive Simulation"

\end_inset

, es decir un conjunto de elementos que forman una infraestructura con el
 objetivo de unir múltiples simulaciones en ubicaciones distintas para poder
 crear mundos virtuales y complejos que ofrezcan la posibilidad de activididades
 altamente interactivas.
 Las simulaciones están formadas por entidades que interactuan unas con
 otras 
\begin_inset CommandInset citation
LatexCommand citep
key "StandardDIS"

\end_inset

.
 Estas entidades se modelan como objetos, colecciones de campos (variables
 y atributos) y métodos para modelar el comportamiento de una determinada
 entidad.
 Por otra parte es necesario modelar las relaciones entre entidades.
 Las relaciones entre objetos se basan en tres enfoques:
\end_layout

\begin_layout Itemize
Atribujos y variables que son accesibles por otros objetos.
\end_layout

\begin_layout Itemize
Asociaciones de objetos, por ejemplo si un objeto es una parte de otro.
\end_layout

\begin_layout Itemize
Interacciones entre objetos, las cuales se expresan en como el estado de
 un objeto influye en otro.
\end_layout

\begin_layout Standard
En un modelo de simulación orientado a objetos existen cuatro eventos princaples
, los cuales están relacionados con los estados que puede tener una entidad.
 Los eventos pueden ser:
\end_layout

\begin_layout Itemize
Creación de un nuevo objeto.
\end_layout

\begin_layout Itemize
Cambio del estado actual de un objeto.
\end_layout

\begin_layout Itemize
La interacción de un objeto con otro.
\end_layout

\begin_layout Itemize
Eliminación de un objeto.
\end_layout

\begin_layout Standard
Se observa una gran relación con la simulación de entidades reales.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La infraestructura que conforma un MOGs se apoya sobre una red la cual para
 nada es perfecta.
 Cada vez estos juegos precisan de requísitos mayores ya que ofrecen una
 mayor interactividad unida a la mejora gráfica que conlleva la necesidad
 de aumentar la precisición para que así el jugador obtenga una experiencia
 de juego satisfactoria.
 Es decir los jugadores necesitan que sus acciones parezcan ser ejecutadas
 en el mismo espacio virtual alcanzo suficiente realismo como si fuera el
 mundo real a pesar de que las localizaciones geográficas esten a miles
 de kilómetros de distancia.
 
\end_layout

\begin_layout Subsection
Juegos Multijugador Masivos en Línea 
\end_layout

\begin_layout Standard
Este tipo de juego se comenta con algo más de detalle ya que se implementará
 un ejemplo posteriormente.
 Los juegos multijugador masivos en línea o MMOGs (Massively Multiplayer
 Online Game) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "MMOG"
description "Massively Multiplayer Online Game"

\end_inset

 son un tipo en el cual se puede soportan una gran cantidad de participantes
 simultáneos.
 Existen seis tipos de MMOGs:
\end_layout

\begin_layout Itemize
Rol: conocidos como MMORPG (Massively Multiplayer Online Role-Playing Games)
 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "MMORPG"
description "Massively Multiplayer Online Role-Playing Games"

\end_inset

, el jugador asume el papel de un personaje e interactua con otros personajes,
 los cuales son otros jugadores, en un gran mundo virtual.
\end_layout

\begin_layout Itemize
Shooter en primera persona: denominados como MMOFPS (Massively Multiplayer
 Online First Person Shooter) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol " MMOFPS "
description "Massively Multiplayer Online First Person Shooter"

\end_inset

, son juegos que enfatizan en la habilidad del jugador a la hora de apuntar
 y pensar tácticamente.
\end_layout

\begin_layout Itemize
Estrategia en tiempo real: normalmente se conocen el jugador se pone ante
 una civilzación, ejercicito o similar y según sus decisiones así avanzará
 en la partida.
\end_layout

\begin_layout Itemize
Estrategia basada en turnos: cada jugador dispone de un tiempo o tick para
 llevar a cabo sus acciones.
\end_layout

\begin_layout Itemize
Simulaciones: tienen como objetivo simular con precisión ciertos aspectos
 del mundo real, por ejemplo conducir o pilotar.
 
\end_layout

\begin_layout Itemize
Casual: juegos cuyo objetivo es atraer a una gran cantidad de usuarios casual,
 ya que son simples y no hace falta dedicarles mucho tiempo.
\end_layout

\begin_layout Standard
Cada tipo de MMOG presenta unas carasterísticas especifícas debido al comportami
ento que intentan simular y también a como el usuario interacciona con mundo
 virtual.
 Por ejemplo los FPS, tiene unos requisitos muy altos ya que es necesario
 que el jugador observe al resto de jugadores con un movimiento continuo
 y suave para poder apuntar y disparar los proyectiles, así como estos alcanzarl
os.
 Pequeños errores de precisión provocan un gran descontento en los participantes
 ya que ellos observan que han disparado al enemigo y este no sufre daño.
 
\end_layout

\begin_layout Subsubsection
Arquitecturas
\end_layout

\begin_layout Standard
Existen diferentes posibilidades para implementar la estrucutra de un videojuego
 multijugador en red.
 Cada propuestas presenta unas ventajas y desventajas.
 Las propuestas difieren en escalabilidad, complejidad y algunos otros puntos.
\end_layout

\begin_layout Description

\noun on
Cliente-Servidor
\end_layout

\begin_layout Standard
Se trata de la propuesta más utilizada por ahora.
 Este modelo es más utilizado debido a que es fácil de implementar y sobretodo
 la compañia encargada del desarrollo del videojuego tiene un control total.
 Los servidores se distribuyen geográficamente en lugares condicionados
 en función del público y la expasión que el videjuego tiene.
 Los servidores se usan para mantener el estado de los jugadores y mantener
 el mundo virtual.
 La función principal del servidor es enviar los estados de los objetos
 y otros personajes de interés hacia el jugador de modo que el servidor
 siempre sabe que es lo que está ocurriendo.
 Existen otras tareas de las cuales los servidores centralizados deben hacerse
 cargo.
 Por ejemplo deben hacerse cargo de la autenticación de modo que participantes
 no autorizadas se les denege el acceso.
 Además pueden ofrecer funcionalidades para chat de texto o voz.
 Los servidores tienen una capacidad limitada y por lo tanto para no saturarlos
 a más jugadores se necesitan más servidores.
 Cada servidor maneja mundos virtuales pararelos los cuales no están conectados
 entre sí.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Por lo tanto la arquitectura cliente-servidor no es escalable.
 La compañia desarrolladora y productora instala una cantidad limitada de
 servidores de modo que el número de jugaodes que pueden participar simultáneame
nte esta limitada al máximo tráfico que soporten dichos servidores.
 Si se conoce la media de jugadores que están jugando a la vez se puede
 ajustar el número de servidores a este requisito.
 El problema es controlar los picos que se pueden dar en algunos momentos
 concretos donde los servidores pueden llegar a su límite.
 Debido a esto, esta arquitectura tiene un cuello de botella en el acceso
 a los servidores.
 
\end_layout

\begin_layout Standard
\align center
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/ArquitecturaCliente-Servidor.png
	scale 50
	rotateOrigin center

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura Cliente-Servidor
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Description

\noun on
Peer-to-peer
\end_layout

\begin_layout Standard
También conocido como P2P (Peer-To-Peer)
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "P2P"
description "Peer-To-Peer"

\end_inset

, este modelo carece de servidor.
 Es decir no hay ninguna autoridad que imponga reglas o mantenga el estado
 de los objetos.
 Al no existir servidores esta arquitectura es escalable ilimitadamente.
 Las redes peer-to-peer se modelan mediante un gráfico formado por un conjunto
 de nodos a los cuales se les denominan peer y sus conexiones entre ellos.
 Cada peer tiene una lista de vecinos cercanos a él.
 Estas relaciones son bidireccionales.
 Si hay cualquier cambio en el estado de un 
\begin_inset Quotes eld
\end_inset

peer
\begin_inset Quotes erd
\end_inset

 este cambio se propaga a sus vecinos.
 De este modo siempre se conocen a los que están en una región circundante.
 (Preguntar, cuano es necesario poner o detallar, INCLUIR IMÁGENES)
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/ArquitecturaP2P.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura P2P
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Description

\noun on
Híbrida
\end_layout

\begin_layout Standard
Se apoya en características tanto de la arquitectura cliente-servidor como
 en la P2P.
 En esta arquitectura los servidores tiene como función dar soporte a la
 estructura.
 Generalmente el servidor maneja las autorizaciones de los jugadores.
 Aunque también es posible que almacen estados como por ejemplo la habilidad
 del jugador.
 El resto de funciones son manejadas por los 
\begin_inset Quotes eld
\end_inset

peers
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/ArquitecturaHibrida.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Arquitectura Híbrida
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Carasterísticas del tráfico
\end_layout

\begin_layout Standard
Los videojuegos generan un tráfico en la red muy característico diferenciandose
 de otras aplicaciones.
 Los MMOGs presentan las siguientes carasterísticas:
\end_layout

\begin_layout Itemize
Tráfico bidireccional: existe envio de información desde el servidor al
 cliente y viceversa.
 En caso de la arquitectura 
\begin_inset Quotes eld
\end_inset

peer-to-peer
\begin_inset Quotes erd
\end_inset

 de igual modo hay intercambio en ambas direcciones entre 
\begin_inset Quotes eld
\end_inset

peers
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Itemize
Predictibilidad: modelar el tráfico es relativamente una simple tarea puesto
 que el trafico no exhibe un comportamiento fractal cuando el número de
 jugadores activos está relativamente fijado.
 
\end_layout

\begin_layout Itemize
Poca variabilidad: siendo dependiente con el género del juego.
\end_layout

\begin_layout Itemize
Paquetes de tamaños pequeños: la información intercambiada es reducida,
 por lo que el ancho de banda utilizado es reducido.
\end_layout

\begin_layout Itemize
Baja tasa de paquetes: grandes ráfagas altamente periódicas de pequeños
 paquetes.
\end_layout

\begin_layout Itemize
Sensibilidad al retardo: existen diferencias entre el género en función
 del nivel de interacción que requiera.
\end_layout

\begin_layout Subsection
Análisis de Entornos de Desarrollo disponibles
\end_layout

\begin_layout Subsubsection
Corona SDK
\end_layout

\begin_layout Standard
Corona SDK es una herramienta o kit de desarrollo software multiplataforma
 para dispositivos únicamente móviles desarrollada por Corona Labs Inc.
 Permite desarrollar aplicaciones para los siguientes sistemas: iOS, Android
 (incluyendo Android TV), Kindle y Windows Phone 8.
 Ofrece una gran rapidez para el desarrollo de los proyecos.
 Esto es debido a la gran cantidad de librerías de las que dispone desde
 alguna básica para entorno gráfico hasta aquellas relacionadas con la monetizac
ión o redes sociales.
 Es por ello que es posible crear juegos y aplicaciones rápidamente pudiendo
 ver los cambios en el simulador del que dispone, Corona Simulator.
 Hace relativamente poco ha sido liberada completamente su licencia hasta
 obtener un máximo de beneficios aspecto muy llamativo.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Cuenta con comunidad bastante amplia por lo que se tiene gran cantidad de
 información, tutoriales y blogs donde preguntar dudas y aprender.
 Esto aunque parece un detalle solo es de lo más importante de una herramienta,
 que sea de confianza y podamos resolver los problemas que se presenten
 como el desarrollo del proyecto avanza.Se trata de una herramienta la cual
 se especializa para el desarrollo de juegos aunque también se puede hacer
 aplicaciones.
 Por lo tanto dispondrá de muchas más ayuda para el desarrollo de videojuegos,
 como ejemplo comentar la nueva herramienta que presentaron hace poco (en
 fase beta) denominada Composer GUI orientada al diseño visual de escenarios,
 es decir sin necesidad de código directamente.
 El desarrollo se realiza con el lenguaje de scripting Lua (X), un lenguaje
 interpretado muy rápido, bastante ligero y fácil de aprender.
 Un aspecto muy importante es que el motor que implementa es de dos dimensiones,
 2D, por lo tanto esta limitado a esta pudiendo simular una tercera dimensión
 llegando a lo que se conoce como 2.5D.
 Corona SDK se basa en estándares de la industría incluyendo por ejemplo
 OpenGL, OpenAL, Box2D, Facebook, SQLite y otros muchos.
\end_layout

\begin_layout Standard
Con respecto a red no ofrece ningún mecanismo que simplifique la implementación
 por lo tanto se trata de un entorno con muchas carencias en este aspecto.
 La única manera de realizar videojuegos en red es implementar todo la arquitect
ura desde abajo (sockets) o acudir a librerías de terceros generalmente
 de pago.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploCoronaSDK.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploCoronaSDK"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo con Corona SDK
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Shiva3D
\end_layout

\begin_layout Standard
Shiva3D es un entorno de desarrollo de aplicaciones y juegos 3D.
 Permite exportar tanto los juegos como aplicaciones a más de 20 plataformas
 entre las que se encunetran iOS, Android, Windows Phone, Windows, OS X,
 Linux, navegadores y consolas de juegos.
 Se trata de una potente plataforma de desarrollo reduciendo el tiempo para
 sacar el contenido al mercado.
 Por tanto esta orientada tanto a grandes desarrolladoras como a pequeñas
 o desarrolladores individuales.
 Shiva3D cuenta con un fuerte equipo de apoyo detrás de él, los cuales no
 paran de introducir novedades y facilidades así como añadir soporte a todos
 sus desarrolladores.
 Ofrece a los desarrolladores tres tipos de licencia.
 La primera de ellas es una versión Web gratis muy pobre ya que solo permite
 publicar en páginas web.
 En cambio las otras dos, la básica y avanzada permiten hacer uso de todo
 las carasterícticas y por ello tienen un costo que sorprendentemente no
 es muy alto.
\begin_inset Newline newline
\end_inset

 
\end_layout

\begin_layout Standard
En cuanto a todas las carasterísticas son muy variadas y potentes.
 El editor de Shiva3D es un software el cual te muestra para se vea lo se
 obtendrá.
 Es lo que se llama un WYSIWYG (What You See Is What You Get).
 Esta formado por 21 módulos desde editor de terreno y animaciones a un
 editor de código.
 Al igual que Corona SDK la programación se realiza en Lua contando con
 cientas de específicas funciones y constantes de Shiva3D.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Respecto a las posibilidades que ofrece para crear juegos en red tiene dos
 variantes.
 La primera es usar un servidor incorporado para pequeños juegos multijugador
 de hasta 16 jugadores haciendo uso de GET y POST a través de XML.
 La segunda posibilidad es muchísimo más potente tratandose de una licencia
 adicional para un servidor dedicado Shiva para miles de jugadores.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploShiva3D.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploShiva3D"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo con Shiva3D
\begin_inset CommandInset citation
LatexCommand citep
key "EjemploShiva3D"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Marmalade
\end_layout

\begin_layout Standard
Marmalade se presenta como una herramienta de desarrollo multiplataforma
 cuyo objetivo principal es dar una gran libertad para innovar, crear y
 desarrollar contenido en cualquier dipositivo sin compremeter en el rendimiento
 o aspecto.
 Reduce el tiempo y esfuerzo en la creación de juegos y aplicaciones en
 diferentes sistemas operativos y plataformas.
 Gracias a Marmalade se usa el mismo código base en todas las plataformas
 compatibles y se puede compartir, integrar y reutilizar tecnologías y herramien
tas de terceros.
 Al igual que los demás entornos permite las principales plataformas incluyendo
 el nuevo sistema operativo móvil Tizen.
 En el caso de Marmalade existen varios tipos de licencia.
 Parte desde la licencia gratis la cual tiene limitaciones en cuanto a plataform
as y del desarrollo de aplicaciones nativas hasta la licencia profesional
 la cual alcanza un precio muy elevado.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
El kit de desarrollo esta formado por un conjunto de herramientas que permiten
 desarrollar aplicaciones y juegos y se dividen en cinco subsistemas:
\end_layout

\begin_layout Itemize
Marmalade C++: permite desarrollar en C++ para cualquier plataforma con
 un alto rendimiento.
 Es la herramienta principal ya que C++ es el lenguaje principal de desarrollo
 con Marmalade.
\end_layout

\begin_layout Itemize
Marmalade Juice: aporta la capacidad de compilar los proyectos iOS nativos
 para Android.
 Es decir permite desarrollar las aplicaciones y juegos con Xcode en los
 lenguajes Objetive-C o Swift, compilarlos y exportarlos sin necesidad de
 ningún cambio.
\end_layout

\begin_layout Itemize
Marmalade Quick: se trata de un entorno RAD (Rapid Application Development)
 que permite un despliegue simultáneo en múltiples plataformas.
 Este subsistema usa como lenguaje Lua.
\end_layout

\begin_layout Itemize
Marmalade Web: permite la creación de aplicaciones híbridas usando HTML5,
 CSS y JavaScript.
 
\end_layout

\begin_layout Itemize
Marmalade Ecosystem: acceso a módulos, servicios, herramientas y extensiones
 qu eayudan a enriquecer, conectar y monetizar.
\end_layout

\begin_layout Standard
El lenguaje principal es C++, aunque depediendo del subsistema se usan diferente
s sin contar el desarrollo en entornos nativos.
 Resumiendo Marmalade se presenta más bien como una herramienta que permite
 implementar código a través de múltiples plataformas y dispositivos desde
 una única base de código, es decir un middleware.
 Marmalade permite desarrollos en 2D y 3D pero está mucho más orientado
 al primero de ellos al igual que CoronaSDK
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Marmalade no ofrece en sí ninguna ayuda propia para implementar juegos multijuga
dor sino que permite usar cualquier librería de terceros para su implementación.
 (Buscar algo más de información hay poquita la verdad).
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploMarmalade.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploMarmalade"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo con Marmalade
\begin_inset CommandInset citation
LatexCommand citep
key "EjemploMarmalade"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Esenthel Engine 
\end_layout

\begin_layout Standard
(No he encontrado mucha información)
\end_layout

\begin_layout Subsubsection
SIO2 Engine
\end_layout

\begin_layout Standard
(No he encontrado mucha información)
\end_layout

\begin_layout Subsubsection
Torque3D
\end_layout

\begin_layout Standard
Torque3D es una plataforma que se presenta como solución de código abierto
 para el desarrollo de videojuegos.
 Cuenta con el motor Torque Game.
 Ha sido diseñado para una alta flexibilidad y rendimiento en un amplia
 gama de hardware.
 Viene con un conjunto complento de herramientas para producir juegos y
 simulaciones de calidad.
 Torque3D es solo compatible con Windows y desarrollo web y respecto a las
 plataformas a las que se pueden exportar los juegos son escasas, Windows,
 Linux, OS X, iOS y algunas consolas.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Cuenta con un editor WYSIWYG que deja que desear ya que muchas cosas se
 necesitan hacer programando.
 Cuenta con herramientas de ayuda a los diseñadores para los gráficos, así
 como creación de terreros, iluminación, físicas y sistemas de renderización.
 Se trata de una plataforma muy completa a nivel profesional pero dejada
 actualmente por parte de la compañia que hay por detrás.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En cuanto red ofrece una sencilla forma de implementar juegos multijugador
 incluyendo técnicas para ofrece servicio óptimo, interpolación, extrapolación
 y predicción del lado del cliente.
 Lo mejor es que debido a que el desarrollo de un juego en red es complejo
 la empresa a la que pertecene Torque3D liberó un proyecto el cual consiste
 en un FPS multijugador totalmente funcional y que se puede usar como modelo.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploTorque3D.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo con Torque3D
\begin_inset CommandInset citation
LatexCommand citep
key "EjemploTorque3D"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploTorque3D"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Unity3D
\end_layout

\begin_layout Standard
Unity se trata de unas de las plataformas para desarrollar videojuegos más
 completas que existen.
 Permite desarrollar para múltiples plataformas a partir de un único proyecto
 entre las que están las principales móviles, navegadores, de escritorio
 y consolas.
 Dentro del proyecto se tiene control sobre todas las plataformas para las
 cuales se ejecutará.
 Por lo que Unity consigue hacer más fácil de mantener el código de trabajo
 con la abstracción de la plataforma.
 Unity busca hacerse cargo del trabajo de fondo de modo que los desarrolladores
 solo se centren en el desarrollo del juego en sí.
 Unity es un motor gráfico asociado a los juegos para dispositivos móviles
 con un mayor ayudas para el 3D.
 Aunque actualmente facilita ya el desarrollo de juegos en 2D enormente
 así gracias a su ultima versión que añade nuevas y potentens capacidad
 para crear juegos con gráficos más realistas para dispositivos más potentes..
 Las licencias de Unity son elevadas.
 La gratuita tiene limitaciones en cuanto a plataformas, características
 y beneficios mientras que las de pago abren más posibilidades a costa de
 su alto precio.
 Aún así compensa enormemente por el tiempo de desarrollo que ahorra y la
 calidad del producto final.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Su gran potencia reside en su editor uno de los más sencillos y potentes
 del mercado.
 El editor permite visualizar el juego a distintas resoluciones en una vista
 WYSIWYG, al igual que el editor de Shiva3D.
 Cuenta con un gran potente motor repleto de carasterísticas y posibilidades.
 Unity permite usar junto con 3ds Max, Maya, Blender, Cinema 4D, Adobe Photoshop
, Adobe Fireworks y otros.
 De modo que los cambios realizados a las creaciones realizadas con estas
 se actualizan automaticamente en Unity sin necesidad de reimportar.
\end_layout

\begin_layout Standard
El motor gráfico que utiliza es Direct3D (para Windows), OpenGL (para Mac
 y Linux), OpenGL ES (para Android y iOS) y propietarios para consolas y
 el resto.
 Permite mapeado de relieve, reflexión de mapeado, mapegado de paralaje,
 oclusión ambiental, sombras dinámicas, renderizados, ect.
 La programación de los script se realiza a través del editor que integra
 MonoDevelop, en cualquiera de siguientes tres lenguajes, UnityScript, C#
 o Boo.
\end_layout

\begin_layout Standard
Además Unity3D ofrece multitud de paquetes gratuitos o de pago de una amplia
 gama, incluyendo modelos 3D, interfaces de usuario, ejemplos o animaciones
 por lo que puede reducir el tiempo de desarrollo del proyecto.
 Todos estos paquetes se ofrecen a través de Unity Asset Store el cual es
 un recurso disponible desde el editor de Unity.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Unity ofrece grandes posibilidades para desarrollar juegos multijugador.
 Incluye una librería específica para implementar el servidor y clientes
 muy cómodo para implementar un multijugador local simplificando enormemente
 el desarrollo.
 Por otra parte contiene todo lo necesario para abstraer al desarrollador
 de la implementación de la comunicación entre las diferentes entidades.
 Por lo tanto ofrece todo lo necesario siendo cómodo y muy facil de usar.
 El problema surje cuando se trata de un juego más ambicioso que quiere
 implementar un multijugador en red a nivel global por ejemplo.
 En esta situación no queda más remedio que recurrir a terceros.
 En caso de Unity, Photon es un buen ejemplo ya que ofrece sus librerías
 para este proposito con diferentes licencias en función de los requisitos
 del juego.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploUnity3D.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploUnity3D"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo con Unity3D
\begin_inset CommandInset citation
LatexCommand citep
key "EjemploUnity3D"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Unreal Engine 4
\end_layout

\begin_layout Standard
Unreal Engine 4 (UE4) se trata de un completa suite de herramientas para
 el desarrollo de juegos.
 Permite el desarrollo desde pequeños juegos para móviles en 2D hasta títulos
 AAA de grandes desarrolladoras en 3D.
 No solo es una herramienta cuyo su único uso sea para juegos, sino tambien
 para realidad virtual, educación, arquitectura o el cine.
 Ofrece todo lo necesario para cualquier idea que se ocurra.
 Recientemente Unreal Engine 4 se ha liberado completamente solamente se
 paga un porcentaje de los beneficios que se obtienen, es decir ellos ingresan
 si el desarrollador ingresa.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Actualmente Unreal Engine ofrece una gran adaptabilidad ya que es ideal
 trabajar para juegos en PC así para las demás plataformas.
 Es decir permite crear juegos pequeños y adaptarlos sin hacer prácticamente
 nada a plataformas móviles o navegadores.
 Al igual que Shiva3D y Unity3D ofrece un editor WYSIWYG completísimo y
 muy potente llegando a crear videojuegos sin necesidad de escribir código
 es lo que se conoce como blueprints.
 El sistema de Blueprints Visual Scripting permite construir juegos desde
 cero sin tener que escribir ninguna línea de código.
 Eso sí la programación no queda relegada aún segundo plano sino que los
 blueprints y el código están pensado para trabajar juntos y revueltos.
 UR4 fue reescrito completamente en C++ siendo este el lenguaje de programación
 usado en el desarrollo.
 En cuanto potencia, es decir el nivel gráfico y estético del motor es inmejorab
le.
 Por destacar algo cuenta con una gestión de partículas de las mejores del
 momento.
 Contiene innumerables herramientas avanzada muy diversas.
 
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

En cuanto a ayuda para la implementación del multijugador en los juegos
 UE4 ofrece muchísimas posibilidades.
 Por ejemplo recientemente se introdujo el sistema de blueprints orientado
 a multijugador.
 Esto es programación gráfica orientada a gestionar y crear servidores y
 demás componentes para un buen modo multijugador.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename ../figures/EjemploUE4.jpg
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploUE4"

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo de UE4
\begin_inset CommandInset citation
LatexCommand citep
key "EjemploUE4"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Comparación
\end_layout

\begin_layout Standard
En esta sección se comparan los diferentes entornos para el desarrollo de
 videojuegos.
 Para la comparación se abarcan diferentes aspectos.
 Para una comparación mucho más clara y visual se realizará por medio de
 una tabla divida en dos partes la cual se explicará a continuación.
 Las colunmas que contiene la tabla son:
\end_layout

\begin_layout Itemize
Entorno: indica la herramienta o kit de desarrollo que se está analizando.
\end_layout

\begin_layout Itemize
Plataformas: indica las plataformas y sistemas operativos que soporta.
\end_layout

\begin_layout Itemize
Facilidades y recursos: referido a las herramientas, características y recursos
 que el entorno pone al alcanze de los desarrolladores para un cómodo y
 rápido desarrollo.
 Se clasifica en:
\end_layout

\begin_deeper
\begin_layout Itemize
Altas: ofrece gran características de diseño visual y gráfico, recursos
 de diseño y diversas herramientas.
\end_layout

\begin_layout Itemize
Medias: ofrece diseño gráfico pero necesita de programación, herramientas
 que simplifican el trabajo, junto 
\end_layout

\begin_layout Itemize
Bajas: herramientas más sencillas, con más importancia de la programación.
 
\end_layout

\end_deeper
\begin_layout Itemize
Dificultad: se refiere al la curva de aprendizaje que tiene el entorno en
 sí.
\end_layout

\begin_layout Itemize
Lenguajes de programación: los lenguajes de programación soportados por
 el entorno.
\end_layout

\begin_layout Itemize
Tipo de Motor: indica de cuantas dimensiones es el motor, es decir de 2D
 y/o 3D.
\end_layout

\begin_layout Itemize
Potencia: capacidad gráfica, efectos, iluminaciones y animaciones que alcanza
 el motor.
\end_layout

\begin_layout Itemize
Multijugador: indica si el entorno incluye soporte para multijugador.
 El soporte se clasifica en poco, moderado y mucho.
 
\end_layout

\begin_layout Itemize
Licencia: indica que ofrece la versión gratuita.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="19" columns="5">
<features rotate="0" tabularvalignment="bottom">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top" width="4cm">
<column alignment="center" valignment="top" width="25mm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="2cm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entornos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Plataformas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Herramientas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Dificultad
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lenguaje
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CoronaSDK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Ninguna
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Básicas
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Baja
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lua
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS, Android, Kindle, Windows Phone
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: Ninguna
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shiva3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Windows, Mac OS X, Linux 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Medias
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alta
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Lua
\begin_inset Newline newline
\end_inset

C++
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS, Android, Windows Phone
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: Navegadores, Consolas
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marmalade
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Windows, Mac OS X 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Medias
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Media
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C++
\begin_inset Newline newline
\end_inset

Objetive-C
\begin_inset Newline newline
\end_inset

Lua
\begin_inset Newline newline
\end_inset

HTML5
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS, Android, Windows Phone, Tyzen
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: Navegadores, Consolas
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Torque3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Windows, Mac OS X 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Medias
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alta
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C++
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: escasas consolas
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unity3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Windows, Mac OS X, Linux
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altas
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Media
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C#
\begin_inset Newline newline
\end_inset

UnityScript
\begin_inset Newline newline
\end_inset

 Boo
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS, Android, Windows Phone
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="middle" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: Navegadores, Consolas
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Escritorio: Windows, Mac OS X, Linux 
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Altas
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Media/Alta
\end_layout

\end_inset
</cell>
<cell multirow="3" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
C++
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Móviles: iOS, Android, Windows Phone
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Otras: Navegadores, Consolas
\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multirow="4" alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla comparativa de entornos (I)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="6">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top" width="2.5cm">
<column alignment="center" valignment="top" width="2cm">
<column alignment="center" valignment="top" width="15mm">
<column alignment="center" valignment="top" width="25mm">
<column alignment="center" valignment="top" width="30mm">
<column alignment="center" valignment="top" width="12mm">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Entornos
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Potencia
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Motor
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Multijugador
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Licencia Gratuita
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Actual
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Corona SDK
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Baja
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NO
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sin limitaciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Shiva3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Media
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3D-2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Limitaciones Severas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NO
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Marmalade
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Media-Alta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3D-2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Limitaciones Severas
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Torque3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Medias
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3D-2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sin limitaciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NO
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Unity3D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3D-2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Limitaciones 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UE4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Muy Alta
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
3D-2D
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Sin limitaciones
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
SI
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Tabla comparativa de entornos (II)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
El videojuego a desarrollar se trata de un FPS en tiempo real sobre ordenadores
 de escritorio.
 Teniendo en cuenta este objetivo a continuación se muestra una valoración
 de los diferentes entornos y por que se ha elegido uno en concreto.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Lo primero es que debido a que el juego que se quiere implementar es en
 3D se ha descartado los entornos que solo disponen de 2D, es decir Corona
 SDK.
 Shiva3D debido a que su versión gratuita solo permite el desarrollo web
 y también su curva de aprendizaje es lenta se descarto.
 Marmalade por su parte ofrece todo lo necesario, pero con respecto al multijuga
dor carecía de la funcionalidad que se buscaba.Además de que su desarrollo
 es algo más lento que en el resto de entornos.
 Por último encontramos a Unity3D y UE4.
 En ambos encontramos todo los requisítos para implementar el videojuego
 que se busca.
 Ambos tiene un increible editor gráfico sobradísimo para el objetivo.
 También tienen funcionalidades para implementar multijugador.
 El problema es que UE4 es un entorno capaz de llegar a desarrollar videojuegos
 AAA y esto conlleva que para un equipo pequeño o individual es demasiado.
 En cambio Unity3D es perfecto para desarrolladores individuales o pequeños
 grupos ya que permite un desarrollo muy rápido a demás de ofrecer muchísimos
 recursos.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Pero el aspecto por el que se escoge Unity3D como entorno de desarrollo
 es debido a la implementación que permite para el multijugador.
 Incluye funcionalidad para implementar clientes así como servidores en
 los clientes de modo que da todo el control al desarrollador y esto es
 fundamental para el objetivo del trabajo.
\end_layout

\begin_layout Section
Redes
\end_layout

\begin_layout Standard
Una vez visto los videojuegos en detalle así diferentes entornos de desarrollo
 que se usan en la industria el objetivo de esta sección es comprender la
 situación y problemas de las redes sobre las que se implementan los videojuegos
 multijugador en línea.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
TeleEye iView para Android.
\begin_inset CommandInset citation
LatexCommand citep
key "ImagenTeleEye"

\end_inset


\end_layout

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "Fig TeleEye"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Características
\end_layout

\begin_layout Standard
Está desarrollado siguiendo Bla, Bla, Bla...
 y puede realizar PTZ
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "PTZ"
description "Acrónimo de \\textit{pan-tilt-zoom}, es decir, moviento horizontal y vertical de la cámara y la posibilidad de acercar la imagen."

\end_inset

.
\end_layout

\begin_layout Subsection
Ventajas
\end_layout

\begin_layout Subsection
Desventajas o Problemas
\end_layout

\begin_layout Section
Dead Reckoning
\end_layout

\begin_layout Standard
Cuando se empieza a desarrollar un videojuego en red rápidamente aparecen
 problemas al tratar con la latencia.
 Esta no provoca problemas para juegos en los cuales lo movimientos son
 lentos, por ejemplo un juego por turnos.
 Pero por otra parte en juego con altos requisitos de interactividad se
 ven muy afectados.
 Existen soluciones basadas en proveer lineas dedicadas extremo a extreno
 donde la latencia este garantizada.
 Pero aunque las redes dedicadas son una solución viable, sin embargo es
 mejor que los juegos operen sobre Internet donde las latencias son menos
 previsibles y generalmente más grandes.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Afortunadamente ya se han desarrollado soluciones para estos problemas las
 cuales en un principio estabán unidas a simulaciones interactivas distribuidas
 o DIS.
 Como ya se comentó los DIS son una tecnología para unir simulaciones de
 distintos tipos en múltiples localizaciones para llegar a crear mundos
 realistas y complejos que permitan una alta interactividad.
 La actualizaciones de estados por parte de las simulaciones pueden generar
 grandes cantidades de información y por tanto saturar el ancho de banda
 de la red.
 Para reducir la cantidad de información y ocultar la latencia las técnicas
 de 
\begin_inset Quotes eld
\end_inset

dead reckoning
\begin_inset Quotes erd
\end_inset

 (DR) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "DR"
description "Dead Reckoning"

\end_inset

 desarrolladas en el estándar IEEE 1278 
\begin_inset CommandInset citation
LatexCommand citep
key "StandardDIS"

\end_inset

 son una característica fundamental para las DIS.
 Haciendo uso de un modelo de dead reckoning se busca mejorar que los usuarios
 participantes mantenga una vista consistente del estado global (EG) 
\begin_inset CommandInset nomenclature
LatexCommand nomenclature
symbol "EG"
description "Estado Global"

\end_inset

, el cuál es dinámico y se encuentra distribuido.
 El EG es la información que cambia con el tiempo y que cada participante
 debe conocer sobre el mundo virtual.
 El estado dinámico en un mundo virtual se conforma de información de quién
 y en qué está participando, su ubicación relativa, su comportamiento, etc.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
En esta sección se define y describe una de la técnicas más conocidas y
 comunes utilizadas en el desarrollo de mundos virtuales, 
\begin_inset Quotes eld
\end_inset

dead reckoning
\begin_inset Quotes erd
\end_inset

 o predicción en español.
 En una primera subsección se definirá en que consiste la técnica.
 Posteriormente se verán los protocolos de predicción más comunes razonando
 que ventajas y mejoras proporcionan así como los incovenientes que presentan.
 (Alargar en función de lo escrito)
\end_layout

\begin_layout Subsection
Definición
\end_layout

\begin_layout Standard
Dead reckoning se puede definir según 
\begin_inset CommandInset citation
LatexCommand citep
key "AdaptiveDRAForDIS"

\end_inset

 como una serie de técnicas y algortimos computables que buscan predecir
 el estado de las entidades participantes del mundo virtual, de modo que
 se puede reducir el número de paquetes de actualización necesarios y la
 latencia de actualización sea lo más rápido posible.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Las técnicas de predicción buscan transmitir paquetes a los entidades participan
tes en el mundo virtual, reduciendo la frecuencia de transmision, y usar
 esa información para aproximar el estado general verdadero.
 Es decir con cada paquetes de actualización se predice el movimiento la
 posición, velocidad, acelearción y otros estados de la entidad.
 El modelo de dead reckoning estima la posición de todas las entidades simuladas.
 La posición anticipada de una entidad es calculada a partir de la última
 posición o su pasado haciendo uso de protocolo de predicción.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Por ejemplo cuando se está en un mundo virtual y se crea una nueva entidad,
 el equipo que posee dicha entidad envía un PDU al resto de equipos que
 conforman la red.
 Este PDU contiene información que identifica a la entidad, como su cinématica
 (posición, velocidad, aceleración y orientación) y otra información como
 por ejemplo el daño de ataque.
 De este modo estos equipos crean copias locales de la entidad y por lo
 tanto, cada nodo en la red comienza a ver a dicha entidad.
 Los PDU tendrán una cierta frecuencia de emisión para la actualización
 de las entidades en los equipos.
 Si se carece de técnicas de dead reckoning las entidades se moverián estáticame
nte como los paquetes indican.
 Por lo tanto en caso de retardo o una frecuencia baja también las entidades
 muestran movimiento erráticos o entrecortados.
 Se quedarían quietos hasta la siguiente actualización y saltarían a la
 siguiente con el nuevo PDU recibido.
 Este problema se puede reducir aumentando la frecuencia pero este enfoque
 tiene serios problemas ya que agota rápidamente el ancho de banda de la
 red.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Con dead reckoning por el contrario después de la recepción del PDU cada
 nodo comienza a mover a la entidad según el protocolo de predicción acordado,
 siempre que la entidad continué moviendose de una manera predecible y coherente.
 Además, es posible que ya que el propietario de la entidad recuerda la
 última vez que envió una actualización ejecute también el protocolo de
 predicción basandose en ese PDU.
 Por lo tanto, tiene una copia de la última actualización que los otros
 nodos de la red han visto como verdadera.
 Cuando el propietario compara el valor extrapolado con el verdadero de
 la entidad que está controlada por el jugador y por ejemplo si estos difieren
 superando un umbral un nuevo PDU es enviado para actualizar a todos las
 copias en los nodos restantes o otra posibi.
 Y de nuevo se repite el proceso.
 En la Figura 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fig EjemploDeadReckoning"

\end_inset

 se nuestra un ejemplo muy visual de un protocolo de predicción donde se
 usa esto.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Si se observa la 
\begin_inset CommandInset ref
LatexCommand ref
reference "Fig EjemploDeadReckoning"

\end_inset

, se muestra una entidad, en este caso un simple muñeco que podría ser el
 jugador el cuál cuando se crea en el instante t0 está en una posición determina
da.
 En este instante los demás equipos o nodos instancian al nuevo jugador
 tomando esa posición inicial.
 Además de la posición los equipos reciben otros estados de la entidad como
 la velocidad o aceleración.
 Con estos estados las entidades aplican el protocolo de predicción para
 describir un camino.
 De vuelta al equipo propietario, el jugador sigue el camino en rojo y a
 la vez va calculando a partir de t0 el estado que tendría el jugador en
 los restantes equipos.
 En el equipo propietario se ha definido un umbral que indica la diferencia
 máxima permitida entre la posición verdadera y la predicha.
 En el instante de tiempo t1 este umbral se alcanza y se realiza un actualizació
n que conlleva la correción en los equipos de la posición del jugador como
 indica t'1.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename ../figures/EjemploDeadReckoning.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Ejemplo visual de Dead Reckoning
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "Fig EjemploDeadReckoning"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Además es importante tener en cuenta que cuando la entidad, o el jugador
 del ejemplo, debe moverse desde su posición calculada y trayectoria predicha
 a su posición verdadera y trayectoria predicha actualmente se puede dar
 un salto.
 Para resolver este problema se presenta las técnicas o protocolos de convergenc
ia que tambien trataremos junto con los de predicción a continuación.
 
\end_layout

\begin_layout Subsection
Protocolos de predicción
\end_layout

\begin_layout Subsubsection
Polinomios Derivados
\end_layout

\begin_layout Standard
Los protocolos más comunes usan polinomios derivados para predecir la posición
 futura de la entidad.
 El polinomio derivado se forma construyendo una fórmula que involucre varias
 derivadas de la posición actual.
 La primera derivada de la posición es la velocidad y la segunda la aceleración.
 Está informaciónes usada para estimar la posición con más precisión y suavidad.
 
\end_layout

\begin_layout Standard
El más simple de todos es el de orden cero, es decir no hace uso de ninguna
 derivada de la posición.
 Por tanto solamente usa la posición instantánea del objeto.
 Los polinomios de orden cero sencillamente copian el estado del paquete
 de actualización y por lo tanto no son muy usados ya que son una forma
 degenerada de predicción.
 (FORMULA)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x\;=\;x
\end{equation}

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "eq:PolinomioDerivadoOrden0"

\end_inset


\end_layout

\begin_layout Standard
El primer polinomio derivado, no degenerado tiene orden uno.
 Esto quiere decir que aprovecha la primera derivada de la posición, la
 velocidad.
 Debido a que la velocidad ya alguna información del comportamiento que
 tiene el objeto en el tiempo, la predicción de primer orden es una mejora
 muy significativa sobre el de orden cero.
 (FORMULA) Incluir la velocidad conlleva que los paquetes de actualización
 de estado proporcionen la posición actual y la velocidad instantánea.
 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{t}\;=\;x_{t'}\;+\;v_{t'}*t
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Para mejorar aún más la predicción de la posición, se puede incluir más
 derivados en los paquetes.
 En caso de añadir la aceleración se puede hacer uso de los polinomios de
 segundo orden.
 (FORMULA)
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
x_{t}\;=\;x_{t'}\;+\;v_{t'}*t\;+\;\frac{1}{2}*a_{t'}*t^{2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Los polinomios de segundo orden son la técnica de predicción más popular
 actualmente en el desarrollo de videojuegos en línea y otros mundos virtuales
 en la actualidad.
 Esto es debido a que es fácil de entender y programar, rápida de calcular,
 y proporciona predicciones relativamente buenas de las posiciones de los
 objetos.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
(Limitaciones de los polinomios derivados)
\end_layout

\begin_layout Subsubsection
Polinomios Híbridos
\end_layout

\begin_layout Standard
Se basan en que la elección del orden del polinomio sea dinámica según la
 situación.
 Cuando se hace uso de polinomios híbridos el nodo remoto puede elegir dinámicam
ente el orden del polinomio (normalmente entre uno y dos).
 En cuanto a las ventajas que presentan primeramente los polinomios de primer
 orden requieren menos operaciones y ofrecen un mejor predicción cuando
 la aceleración es mínima además de existir ocasiones en que la posición
 puede ser predicha con más exactitud sin hacer uso de la aceleración.
 Un ejemplo sería un objeto cuya aceleración cambia continuamente su aceleración
, ya que considerarla puede producir una estimación incorrecta, debido a
 que se produzcan cambios en la aceleración justo después de enviar el paquete
 de actualización.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
EJEMPLOS: PHBDR (position history-based dead reckoning)
\end_layout

\begin_layout Subsection
Protocolos de convergencia
\end_layout

\begin_layout Standard
Las técnicas de convergencia definen que tratamiento se realiza con la informaci
ón que contienen los paquetes de actualización de estado para corregir una
 predicción inexacta.
 Una buena técnica o algoritmo de convergencia permite corregir el estado
 predicho rápidamente sin crear efectos visualmente notables para el usuario.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
La técnica más simple de convergencia se denomina convergencia rápida o
 de orden cero.
 Esta técnica consiste sencillamente en corregir de inmediato la predicción,
 sin preocuparse por los efectos visuales que pueda producir.
 Como ventajas es simple tanto para entenderla e implantarla pero por supuesto
 que no proporciona el mejor despliegue visual.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Las opciones mejores buscan una convergencia más lenta entre la posición
 actual y nueva predicción que ha llegado.
 Una de las más usadas es la convergencia lineal la cual establece una ruta
 entre la posición actual y la nueva posición perteneciente a la nueva ruta
 predicha.
 La convergencia lineal permite dar continuidad a lo largo de la ruta visual.
 Esto quiere decir que el usuario no ningún salto aumentando su experiencia
 y calidad.
 Sin embargo no tiene por que ser necesariamente esta continuidad suave,
 debido a que la entidad podría cambiar de direción de repente.
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Standard
Aplicando técnicas de convergencia que hacen uso de curvas más sofisticadas
 se puede lograr un resultado mucho más exquisito.
 El problema es que al igual que otros aspectos en el desarrollo de videojuegos
 u otros MV es que hay que valorar si el protocolo de convergencia compensa,
 si la mejora visual es comparable a la complejidad computacional.
 
\end_layout

\begin_layout Subsection
Mi Esquema de predicción
\end_layout

\begin_layout Standard
s
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\end_layout

\end_body
\end_document
